% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo_place.R
\name{geo_place}
\alias{geo_place}
\alias{geo_place_data}
\title{Retrieve Geoclient Response for Well-Known NYC Places as a Dataframe}
\usage{
geo_place_data(
  .data,
  place,
  borough = NULL,
  zip = NULL,
  key = NULL,
  rate_limit = TRUE
)

geo_place(place, borough = NULL, zip = NULL, key = NULL, rate_limit = TRUE)
}
\arguments{
\item{.data}{Dataframe containing columns to be used for other arguments.}

\item{place}{Either a vector of BBLs (numeric or character is accepted), or a
bare column name of the bbl field if a dataframe is provided.}

\item{borough}{The name of the borough of the place, as either a vector
or a bare column name of the borough field if a dataframe is provided.
The borough is only required if Zip code is not provided.}

\item{zip}{The Zip code of the place, as either a vector (numeric or character
is accepted) or a bare column name of the borough field if a dataframe
is provided. Five- and seven-digit Zip codes are accepted. The Zip code is
only required if borough is not provided.}

\item{key}{The API key provided to you from the NYC Developer Portal
formated in quotes. Defaults to \code{NULL} and your key is accessed from your
\code{.Renviron}.}

\item{rate_limit}{Whether you would like to limit the rate of API requests in
adherence to Geoclient's Service Usage Guidelines. See \code{?geoclient} for
more information.}
}
\description{
This function takes the name of a well-known NYC place and returns the
Geoclient response as a tibble. The place name, and one of either borough
or Zip code are required. The place components can be provided either in
separate vectors as named arguments or with a dataframe and column names
containing each component. The Geoclient API key
can either be provided directly as an argument, or you can first use
\code{\link[=geoclient_api_key]{geoclient_api_key()}} to add it to your \code{.Renviron} file so it can be
called securely without being stored in your code.
}
\details{
For more details see the Geoclient Documentation's guide to
\href{https://api.cityofnewyork.us/geoclient/v1/doc#section-1.2.6}{making place requests},
interpreting the \href{https://api.cityofnewyork.us/geoclient/v1/doc#section-2.2}{Geosupport return codes},
the \href{https://api.cityofnewyork.us/geoclient/v1/doc#section-3.6}{data returned by \code{geo_place}},
and a \href{https://api.cityofnewyork.us/geoclient/v1/doc#section-4.0}{complete data dictionary}
for all possible data elements returned by any geoclient function.
}
\examples{

\dontrun{

geoclient_api_key("9d8f7b6wh4jfgud67s89jfyw68vj38fh")

geoclient_place(place = "empire state building", borough = "mn")

library(tibble)
library(dplyr)

df <- tribble(
  ~place,         ~boro,         ~zip,
  "NYU",          NA_character_, "10012",
  "CITY HALL",    "MN",          NA_character_,
  "Pospect Park", "Brooklyn",    NA_character_
)

geoclient_place(df, place, boro, zip)

df \%>\%
  mutate(
    bbl = geoclient_place(place = place, borough = boro, zip = zip)[["bbl"]]
  )
}

}
